apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: sergei-super-cluster
  region: us-east-1
  # version: "1.27"

vpc:
  id: "vpc-09003df92d92a2f44"
  subnets:
    public:
      us-east-1a: {id: subnet-01bb4ea1fe53b4200} # For Load Balancer
      us-east-1b: {id: subnet-00490e13801cf6a5f} # For Load Balancer
    private:
      us-east-1a: {id: subnet-0806b7c1e33cdc271} # For Master Node
      us-east-1b: {id: subnet-00d3729aad4962232} # For Master Node

#vpc:
#  subnets:
#    private:
#      us-east-1a: {id: subnet-xxxxxxxxxxxx}
#      us-east-1b: {id: subnet-yyyyyyyyyyyy}
#      us-east-1c: {id: subnet-zzzzzzzzzzzz}

nodeGroups:
- name: ubuntu-t2-micro-nodes
  instanceType: t2.micro
  desiredCapacity: 3
  labels: {role: general}
  volumeSize: 70
  amiFamily: Ubuntu2204 # This specifies that the nodes in the group will use the Ubuntu 20.04 AMI provided by Amazon EKS.
  ssh:
    allow: true # enables SSH access to the nodes.
    publicKeyName: ssh_new_aws_devops_key # your ssh key name
  privateNetworking: true # true ensures that the instances do not have public IP addresses and are only accessible within the VPC
